use axiom_eth::utils::snark_verifier::EnhancedSnark;
use serde::{Deserialize, Serialize};

use crate::scheduler::types::RequestRouter;

/// ProverSnark is the snark generated by prover.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct ProverSnark {
    /// Circuit id of this snark.
    pub circuit_id: String,
    /// Snark payload.
    pub snark: EnhancedSnark,
}

/// Prover task. Circuit id and serialized input.
#[derive(Debug, Serialize, Deserialize)]
pub struct ProverTask {
    pub circuit_id: String,
    pub input: RequestRouter,
}

/// Prover proof. EvmProof for Evm(EXTRA_ROUNDS), Snark for others.
#[derive(Debug, Clone, Serialize, Deserialize)]
pub enum ProverProof {
    Snark(ProverSnark),
    EvmProof(String),
}

/// Response from prover.
#[derive(Debug, Serialize, Deserialize)]
pub struct ProverTaskResponse {
    pub payload: ProverProof,
}
